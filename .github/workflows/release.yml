name: Build & Release

# Fire on every push to main
on:
  push:
    branches:
      - main

jobs:
  build-and-release:
    runs-on: windows-latest
    needs: build-test

    steps:
      - uses: actions/checkout@v3

      # Build & test frontend (reuse CI steps)
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install & build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      # Build Python wheel or do nothing if no tests
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Python deps
        if: ${{ always() && (files.changed | contains('requirements.txt')) }}
        run: |
          pip install -r requirements.txt

      - name: Run Python tests
        continue-on-error: true
        run: |
          pytest || true

      # Build Electron installer
      - name: Install & build installer
        working-directory: installer
        run: |
          npm ci
          npm run build

      # Create a GitHub Release from the pushed tag
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Upload the Windows installer artifact
      - name: Upload installer asset
        uses: softprops/action-upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: installer/dist_installer/your-installer.exe
          asset_name: your-installer.exe
          asset_content_type: application/octet-stream

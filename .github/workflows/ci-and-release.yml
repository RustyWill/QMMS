name: CI & Release

on:
  push:
    # build on every push to main
    branches:
      - main
  # and on every new tag
  create:
    tags:
      - 'v*'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install & test frontend
        working-directory: ./frontend
        run: |
          npm ci
          npm test

      - name: Build frontend
        working-directory: ./frontend
        run: npm run build

      - name: Set up Python (if you need it)
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Python deps
        if: fileExists('requirements.txt')
        run: pip install -r requirements.txt

      - name: Run Python tests
        if: fileExists('tests')
        run: pytest

  package-installer:
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 18.x
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      # install all workspaces (root package.json) so that both frontend and installer deps resolve
      - name: Install root dependencies
        run: npm ci

      - name: Build Electron main
        working-directory: ./installer
        run: npm run build

      - name: Package Windows installer
        working-directory: ./installer
        run: npx electron-builder --win --x64

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMMS-Setup
          path: ./installer/dist_installer/*.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: package-installer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create GitHub Release (draft)
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true

      - name: Upload installer asset
        uses: actions/upload-release-asset@v3
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./installer/dist_installer/QMMS-Setup-${{ github.ref_name }}.exe
          asset_name: QMMS-Setup-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream


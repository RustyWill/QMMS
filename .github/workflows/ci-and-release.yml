name: CI & Release

on:
  push:
    branches: [ main ]
  create:
    tags: [ 'v*' ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # INSTALL THE WHOLE MONOREPO (all workspaces + devDependencies!)
      - name: Install all deps
        run: npm install

      # FRONTEND
      - name: Test frontend
        run: npm --workspace=frontend test

      - name: Build frontend
        run: npm --workspace=frontend run build

      # PYTHON (optional)
      - uses: actions/setup-python@v4
        with: python-version: '3.11'
      - name: Install Python deps
        if: ${{ runner.os != 'Windows' && (exists('requirements.txt')) }}
        run: pip install -r requirements.txt
      - name: Run Python tests
        if: ${{ runner.os != 'Windows' && (exists('tests')) }}
        run: pytest

  package-installer:
    needs: build-and-test
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install all deps
        run: npm install

      - name: Build installer code
        working-directory: installer
        run: npm run build

      - name: Package Windows installer
        working-directory: installer
        run: npm run dist

      - name: Upload installer artifact
        uses: actions/upload-artifact@v4
        with:
          name: QMMS-Setup
          path: installer/dist_installer/*.exe

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: package-installer
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create Draft Release
        id: gh_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          draft: true

      - name: Upload .exe to Release
        uses: actions/upload-release-asset@v3
        with:
          upload_url: ${{ steps.gh_release.outputs.upload_url }}
          asset_path: installer/dist_installer/QMMS-Setup-${{ github.ref_name }}.exe
          asset_name: QMMS-Setup-${{ github.ref_name }}.exe
          asset_content_type: application/octet-stream

